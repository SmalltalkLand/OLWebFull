{"version":3,"file":"static/webpack/static/development/pages/desktop.js.1fbe40aa2a83d33707ad.hot-update.js","sources":["webpack:///./pages/desktop/index.js"],"sourcesContent":["import React, {useState} from 'react'\nimport * as ReactZ from 'react'\nimport {Tabs, Tab} from 'react-bootstrap'\nimport root from 'react-shadow';\nimport Window_ from '../../src/Window.js'\nimport Iframe_ from '../../src/Iframe.js'\nimport MainWelcomePage from '../index.js';\nimport Desktop3D from '../3desktop/index.js'\nimport DiscordPolyfill from '../../src/DiscordPolyfill.js'\nimport Discord from '../discord/index.js'\nimport AAPI from '../../src/appi.js'\nimport * as R from 'ramda'\nimport * as Polyglot from 'node-polyglot'\nimport { create } from \"react-test-renderer\";\nimport MainWorker from '../../src/main.worker.js'\nimport BrowserWrapper from '../../src/browser_loader.js'\nimport Prezi from '../prezi.js'\nimport cw from '../../src/cw.js'\nimport useEventListener from '../../src/handler.js'\nimport Inspector_ from '../../src/Inspector.js'\nclass ErrorBoundary extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { hasError: false };\n    }\n  \n    static getDerivedStateFromError(error) {    return { hasError: true };  }\n    componentDidCatch(error, errorInfo) {     }\n    render() {\n      if (this.state.hasError) {      return <h1>Something went wrong.</h1>;    }\n      return this.props.children; \n    }\n  }\nlet Inspector = R.pipe(props => Object.assign({},props,props.lib),Inspector_);\nlet DefaultDOMCanvas = props => (<canvas {...props} ref = {props.onCanvas}></canvas>)\nlet List = props => (<div>{props.all.map(v => (<div className = {props.selected === v ? 'selected' : ''} onClick = {props.onSelect.bind(null,v)} key = {v}></div>))}</div>)\nlet ExtensionLib;\nimport('../../ol-ex/lib.js').then(v => ExtensionLib = v).catch(err => {});\nexport default class Desktop extends React.Component{\n    get document(){try{return document}catch(err){return null}}\n    constructor(props = {}){\nsuper(props);\nthis.state = {usesSingleWindow: false,currentWindow: undefined,objectTagSheet: {},HotTable: null,appDataMap: new Map(),windows: [],d_a: undefined,javaPackage: undefined,jlink: undefined,ex: undefined};\nthis.state = Object.assign({},this.state,(() => {try{return {javaPackage: Packages.com.smalltalkland.slandroid,jlink: jlink}}catch(err){return {}}})());\nthis.aapi_ = React && AAPI(React)(props.mode);\nthis.aapi = code => this.aapi_(this,this.addWindow.bind(this))(code);\n    this.renderExWinPossibly = () => (<span></span>);\nvar f;\ntry{\nf = fetch;\n}catch(err){\nf = () => Promise.reject();\n\n};\n(f)('/pages/api/usr').then(r => r.text()).then(t => {\n\n\n}).catch(err => {});\ntry{\nif(navigator)import('@handsontable/react').then(m => this.mounted && this.setState({HotTable: m.HotTable}));\n}catch(err){\n\n\n}; \nimport('react-mutation-observer').then(m => this.setState({d_a: m})).catch(err => {});\n}\ncomponentDidUpdate(prevProps) {\n    // Typical usage (don't forget to compare props):\nif(prevProps.mode !== this.props.mode)this.aapi_ = AAPI(React)(this.props.mode)\n  }\ncomponentDidMount(){\n    this.mounted = true;\n    \n    }\n    componentWillUnmount(){\nthis.mounted = false;\n\n    }\n    addWindow(w){\n        return new Promise(c => this.setState(s => ({windows: s.windows.concat([w])}),c))\n    }\n    removeWindow(w){\nreturn new Promise(c => this.setState(s => ({windows: s.windows.filter(sw => sw.id !== w.id)})))\n\n    }\n    renderExWin(Div,Window){\nreturn (<Window><Div></Div></Window>)\n\n    }\n    get discord(){return this.props.discord || (DiscordPolyfill(this))}\nrender(){\n    let document = this.document;\n    let wrap = R.identity;\n    let HotTable;\n    try{\n    if(navigator)HotTable = this.state.HotTable;\n    }catch(err){\nHotTable = function(props){return (<span></span>)};\n\n    };\n    let isBrowser = false;\n    try{\n(navigator);\nisBrowser = true;\n\n    }catch(err){\n\n\n    };\n    let discord = this.discord;\n    let Div = this.props.div || root.div;\n    let Window = this.props.Window || Window_;\n    let Iframe = this.props.Iframe || Iframe_;\n    let DOMCanvas = this.props.Canvas || DefaultDOMCanvas;\n    let MyMutationObserver = this.props.Observer || (this.state.d_a && this.state.d_a.MutationObserver) || (props => props.children);\n    MyMutationObserver = (Old => props => Old && (<Old {...props} subtree = {true}>{props.children}</Old>))(MyMutationObserver);\n    MyMutationObserver = MyMutationObserver || (props => props.children);\n    let lib = {List,div: Div,Div,Window,Iframe,MutationObserver: MyMutationObserver,useEventListener,DOMInterop: {DOMCanvas},cw,desk: {getDeskProps: () => this.props},TextArea: isBrowser || document ? 'textarea': null,Tabs: isBrowser || document ? {Tabs, Tab} : null};\n    let windows = (this.props.windows || [])\n    .concat(this.props.div === null ? [{id: 'welcome',render: (React) => {return (<MainWelcomePage></MainWelcomePage>)}}] : [])\n    .concat(discord ? [{id: 'discord',render: (React,lib) => {let theDiscord = Discord(React,useState);return (<lib.Div><theDiscord lib = {lib} discord = {discord}></theDiscord></lib.Div>)}}] : [])\n    .concat(isBrowser  && Desktop3D ? [{id: 'three',render: rct => (<Desktop3D dcls = {Desktop} linkParent = {this}></Desktop3D>)}] : [])\n    //.concat(isBrowser ? [{id: 'prezi',render: rct => Prezi.w(<div><Prezi noDesktop = {true}></Prezi></div>)}] : [])\n    .concat(Iframe.canRenderHTML && ExtensionLib ? [{id: 'langs',render: r => (<Iframe.html src = {(() => {try{return location.hostname + '/lang/' + lang}catch(err){return ''}})()} windowRef = {win => {ExtensionLib.dr(win.document.querySelector('#firstHeading'))}}></Iframe.html>)}] : [])\n    .concat(this.constructor.wins.map(w => w(this,lib)))\n    .concat([])\n    .concat(this.state.windows)\n    .concat([{id: 'self',render: (React,lib) => (<Inspector lib = {lib} obj = {this}></Inspector>)}])\n    let rw = w => (<MyMutationObserver key = {w.id}><Window><MyMutationObserver>{w.render(Object.assign({},React,ReactZ),lib,this.state.appDataMap.get(w.id),(v) => {this.setState({appDataMap: new Map(this.state.appDataMap).set(w.id,v)})})}</MyMutationObserver></Window></MyMutationObserver>);\n    if(this.props.w)wrap = R.pipe(wrap,this.props.w.bind(null,lib));\n    if(this.state.usesSingleWindow)wrap = R.pipe(wrap,e => (<MyMutationObserver><Div>{this.state.currentWindow ? rw(this.state.currentWindow) : this.props.children}</Div></MyMutationObserver>));\nif(this.props.isWatch)wrap = R.pipe(wrap,e => (<MyMutationObserver><Div><this.props.Watch><MyMutationObserver>{e.props.children[0].props.children[0].props.children}</MyMutationObserver></this.props.Watch></Div></MyMutationObserver>));\n    if(this.props.head === 'less')wrap = R.pipe(wrap,create);\n    if(this.props.head === 'embed')wrap = R.pipe(wrap,e => {e.props.children[0].props.children.map(c => c.key === 'sutils' ? c.props.children[0].props.children[0].props.children[0].children.map(nc => ReactDOM.render(nc,(e => {e.classList.add('ol');let existing = document.querySelector('.sprite-info_group_14-B_').querySelector('.ol');if(existing)return existing;document.querySelector('.sprite-info_group_14-B_')?.appendChild(e); return e})(document.createElement('div')))) : null)});\nif(this.props.connextToEx)wrap = R.pipe(wrap,e => this.props.ex ? (() => {this.setState((s,p) => ({ex: p.ex})); return e})() : (<BrowserWrapper>{v => {this.setState({ex: v});return e}}</BrowserWrapper>));\n    return wrap(<MyMutationObserver><Div>\n    {this.props.children}\n<Window>{HotTable && <HotTable></HotTable>}</Window>\n    {this.renderExWinPossibly(Div,Window)}\n\n    {windows.map(rw)}\n    </Div></MyMutationObserver>)\n}\n}\nObject.assign(Desktop,{wins: []})"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAFA;AAGA;AACA;;;AAEA;;;AACA;AACA;AAAA;AAAA;AACA;AAAA;AACA;;;AALA;AAAA;AAAA;AAAA;AAAA;;;;AANA;AACA;AAYA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;;;;;;;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AADA;AACA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAxBA;AAyBA;AACA;;;AAAA;AACA;AACA;AACA;;;AACA;AACA;AAEA;;;AACA;AACA;AAEA;;;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;;;AACA;AACA;AAEA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAEA;AACA;AADA;AACA;AACA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAOA;;;AArDA;AAAA;AAAA;;;;AAnDA;AACA;AADA;AACA;AAyGA;AAAA;AAAA;;;;A","sourceRoot":""}
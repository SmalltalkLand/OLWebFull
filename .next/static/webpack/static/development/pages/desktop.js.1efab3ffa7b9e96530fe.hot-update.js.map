{"version":3,"file":"static/webpack/static/development/pages/desktop.js.1efab3ffa7b9e96530fe.hot-update.js","sources":["webpack:///./src/Inspector.js"],"sourcesContent":["import React, {useState} from 'react'\nimport * as R from 'ramda'\nlet Inspector;\nexport default Inspector = R.pipe(props => Object.assign({},props,props.lib),props => {if(props.Tabs && props.Div && props.List && props.TextArea && props.Window){let [key,setKey] = useState([]);let isReactComponent = props.obj instanceof Function;return (<props.Tabs.Tabs>\n    <props.Tabs.Tab title = {'Inspect'}>\n        <props.Div>\n            <props.List all = {Object.keys(props.obj)} selected = {key} onSelect= {setKey}></props.List>\n            <props.Div direction = {'ttb'}>\n                <props.TextArea value = {props.obj[key]?.toString()}></props.TextArea>\n                <Inspector obj = {props.obj[key]}></Inspector>\n            </props.Div>\n        </props.Div>\n    </props.Tabs.Tab>\n    {isReactComponent && props.obj.wantsToBeInspectedAsReact ? (<props.Tabs.Tab title = {'Use'}>\n        <props.Window>\n            <props.obj></props.obj>\n\n        </props.Window>\n\n    </props.Tabs.Tab>) : null}\n</props.Tabs.Tabs>)}; return null})"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAIA;AAAA;AAOA;AACA;AADA;AAAA;AAAA;;;;A","sourceRoot":""}
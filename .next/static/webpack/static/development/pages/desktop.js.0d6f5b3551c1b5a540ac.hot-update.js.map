{"version":3,"file":"static/webpack/static/development/pages/desktop.js.0d6f5b3551c1b5a540ac.hot-update.js","sources":["webpack:///./pages/3desktop/index.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react'\nimport root from 'react-shadow';\nimport * as Polyglot from 'node-polyglot'\nimport { Canvas, useFrame, useThree, Dom } from 'react-three-fiber'\nimport DragControls from 'three-dragcontrols';\nexport let Box = React.forwardRef(function Box(props,ref) {\n    \n    // Set up state for the hovered and active state\n    const [hovered, setHover] = useState(false)\n    \n    // Rotate mesh every frame, this is outside of React without overhead\n    \n    return (\n      <mesh\n        {...props}\n        ref={ref}\n        scale={(hovered ? [1.5, 1.5, 1.5] : [1, 1, 1]).map(v => v * props.scale)}\n        onPointerOver={e => setHover(true)}\n        onPointerOut={e => setHover(false)}>\n        <boxBufferGeometry attach=\"geometry\" args={[1, 1, 1].map(v => v * props.scale)} />\n        <meshStandardMaterial attach=\"material\" color={props.color} />\n      </mesh>\n    )\n  })\n  let ThreeRef = props => {props.setThree(useThree()); return null};\n  let DOMCanvas = props => (<Dom><canvas ref = {props.onCanvas} {...props}></canvas></Dom>)\nexport default props => {let Desktop = props.dcls;let [three,setThree] = useState(); if(three)var {camera,gl} = three;let [objs,setObjs] = useState(); if(!objs)setObjs([]); useEffect(() => {if(gl){let d = new DragControls(objs,camera,gl.domElements);return d.dispose.bind(d)}},[props.dcls,objs]); return (<Canvas>\n <Desktop Div = {Box} Canvas = {DOMCanvas} Window = {wprops => {let r = useRef();useEffect(() => {setObjs((objs || []).concat([r.current])); return () => setObjs(objs.filter(o => o !== r.current))}); return (<Box {...wprops} ref = {r}></Box>)}} Iframe = {Box}></Desktop>\n<ThreeRef setThree = {setThree}></ThreeRef>\n</Canvas>)}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAAA;AAAA;AACA;AACA;AAKA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AALA;AAMA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAGA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;;;;A","sourceRoot":""}
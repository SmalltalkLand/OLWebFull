{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _Map from \"@babel/runtime-corejs2/core-js/map\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport root from 'react-shadow';\nimport Window_ from '../../src/Window.js';\nimport Iframe_ from '../../src/Iframe.js';\nimport MainWelcomePage from '../index.js';\nimport Desktop3D from '../3desktop/index.js';\nimport { chromeSwitch } from '../../../OLEx/dist/index.js';\nimport DiscordPolyfill from '../../src/DiscordPolyfill.js';\nimport Discord from '../discord/index.js';\nimport AAPI from '../../src/appi.js';\nimport * as R from 'ramda';\nimport * as Polyglot from 'node-polyglot';\n\nvar _default =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(_default, _React$Component);\n\n  function _default() {\n    var _this;\n\n    var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, _default);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(_default).call(this, props));\n    _this.state = {\n      objectTagSheet: {},\n      HotTable: null,\n      appDataMap: new _Map(),\n      windows: [],\n      d_a: undefined\n    };\n    _this.aapi_ = AAPI(React)(props.mode);\n\n    _this.aapi = function (code) {\n      return _this.aapi_(_assertThisInitialized(_this), _this.addWindow.bind(_assertThisInitialized(_this)))(code);\n    };\n\n    try {\n      _this.renderExWinPossibly = chromeSwitch(function () {\n        return __jsx(\"span\", null);\n      }, _this.renderExWin.bind(_assertThisInitialized(_this)));\n    } catch (err) {\n      _this.renderExWinPossibly = function () {\n        return __jsx(\"span\", null);\n      };\n    }\n\n    ;\n    var f;\n\n    try {\n      f = fetch;\n    } catch (err) {\n      f = function f() {\n        return _Promise.reject();\n      };\n    }\n\n    ;\n    f('/pages/api/usr').then(function (r) {\n      return r.text();\n    }).then(function (t) {})[\"catch\"](function (err) {});\n\n    try {\n      if (navigator) import('@handsontable/react').then(function (m) {\n        return _this.mounted && _this.setState({\n          HotTable: m.HotTable\n        });\n      });\n    } catch (err) {}\n\n    ;\n    import('react-mutation-observer').then(function (m) {\n      return _this.setState({\n        d_a: m\n      });\n    });\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      // Typical usage (don't forget to compare props):\n      if (prevProps.mode !== this.props.mode) this.aapi_ = AAPI(React)(this.props.mode);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.mounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.mounted = false;\n    }\n  }, {\n    key: \"addWindow\",\n    value: function addWindow(w) {\n      var _this2 = this;\n\n      return new _Promise(function (c) {\n        return _this2.setState(function (s) {\n          return {\n            windows: s.windows.concat([w])\n          };\n        }, c);\n      });\n    }\n  }, {\n    key: \"removeWindow\",\n    value: function removeWindow(w) {\n      var _this3 = this;\n\n      return new _Promise(function (c) {\n        return _this3.setState(function (s) {\n          return {\n            windows: s.windows.filter(function (sw) {\n              return sw.id !== w.id;\n            })\n          };\n        });\n      });\n    }\n  }, {\n    key: \"renderExWin\",\n    value: function renderExWin(Div, Window) {\n      return __jsx(Window, null, __jsx(Div, null));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state$d_a,\n          _this4 = this;\n\n      var HotTable;\n\n      try {\n        if (navigator) HotTable = this.state.HotTable;\n      } catch (err) {\n        HotTable = function HotTable(props) {\n          return __jsx(\"span\", null);\n        };\n      }\n\n      ;\n      var isBrowser = false;\n\n      try {\n        navigator;\n        isBrowser = true;\n      } catch (err) {}\n\n      ;\n      var discord = this.discord;\n      var Div = this.props.div || root.div;\n      var Window = this.props.Window || Window_;\n      var Iframe = this.props.Iframe || Iframe_;\n\n      var MyMutationObserver = this.props.observer || ((_this$state$d_a = this.state.d_a) === null || _this$state$d_a === void 0 ? void 0 : _this$state$d_a.MutationObserver) || function (props) {\n        return props.children;\n      };\n\n      MyMutationObserver = function (Old) {\n        return function (props) {\n          return __jsx(Old, _extends({}, props, {\n            subtree: true\n          }), props.children);\n        };\n      }(MyMutationObserver);\n\n      var windows = (this.props.windows || []).concat(this.props.div === null ? [{\n        id: 'welcome',\n        render: function render(React) {\n          return __jsx(MainWelcomePage, null);\n        }\n      }] : []).concat(discord ? [{\n        id: 'discord',\n        render: function render(React, lib) {\n          var theDiscord = Discord(React, useState);\n          return __jsx(lib.Div, null, __jsx(\"theDiscord\", {\n            lib: lib,\n            discord: discord\n          }));\n        }\n      }] : []).concat(isBrowser ? [{\n        id: 'three',\n        render: function render(rct) {\n          return __jsx(Desktop3d, {\n            dcls: Desktop,\n            linkParent: _this4\n          });\n        }\n      }] : []).concat([]).concat(this.state.windows);\n      return __jsx(MyMutationObserver, null, __jsx(Div, null, this.props.div === null ? __jsx(\"div\", {\n        className: 'External'\n      }, this.props.children, __jsx(\"slot\", null)) : null, __jsx(Window, null, HotTable && __jsx(HotTable, null)), this.renderExWinPossibly(Div, Window), windows.map(function (w) {\n        return __jsx(MyMutationObserver, null, __jsx(Window, {\n          key: w.id\n        }, __jsx(MyMutationObserver, null, w.render(React, {\n          div: Div\n        }, _this4.state.appDataMap.get(w.id), function (v) {\n          _this4.setState({\n            appDataMap: new _Map(_this4.state.appDataMap).set(w.id, v)\n          });\n        }))));\n      })));\n    }\n  }, {\n    key: \"discord\",\n    get: function get() {\n      return this.props.discord || DiscordPolyfill(this);\n    }\n  }]);\n\n  return _default;\n}(React.Component);\n\nexport { _default as default };","map":null,"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport useHandler from '../../src/handler.js';\nexport default (function (React, useState) {\n  return function (props) {\n    var _useState = useState(),\n        _useState2 = _slicedToArray(_useState, 2),\n        messages = _useState2[0],\n        setMessages = _useState2[1];\n\n    useHandler('message', function (m) {\n      setMessages((messages || []).concat([m]));\n\n      if (m.content.beginsWith('o|init')) {\n        var c = m.channel.createMessageCollector(function (a) {\n          return true;\n        }, {});\n        c.on('collect', function () {});\n      }\n    }, 'on', 'off', props.discord);\n    return __jsx(props.lib.Div, null);\n  };\n});","map":{"version":3,"sources":["D:/Graham/ObjectLand/main/OLWebFull/pages/discord/index.js"],"names":["useHandler","React","useState","props","messages","setMessages","m","concat","content","beginsWith","c","channel","createMessageCollector","a","on","discord"],"mappings":";;;AAAA,OAAOA,UAAP,MAAuB,sBAAvB;AACA,gBAAe,UAACC,KAAD,EAAOC,QAAP;AAAA,SAAoB,UAACC,KAAD,EAAW;AAAA,oBACbD,QAAQ,EADK;AAAA;AAAA,QACrCE,QADqC;AAAA,QAC5BC,WAD4B;;AAE1CL,IAAAA,UAAU,CAAC,SAAD,EAAW,UAACM,CAAD,EAAO;AAACD,MAAAA,WAAW,CAAC,CAACD,QAAQ,IAAI,EAAb,EAAiBG,MAAjB,CAAwB,CAACD,CAAD,CAAxB,CAAD,CAAX;;AAA2C,UAAGA,CAAC,CAACE,OAAF,CAAUC,UAAV,CAAqB,QAArB,CAAH,EAAkC;AAAC,YAAIC,CAAC,GAAGJ,CAAC,CAACK,OAAF,CAAUC,sBAAV,CAAiC,UAAAC,CAAC;AAAA,iBAAI,IAAJ;AAAA,SAAlC,EAA2C,EAA3C,CAAR;AAAwDH,QAAAA,CAAC,CAACI,EAAF,CAAK,SAAL,EAAe,YAAM,CAAE,CAAvB;AAAyB;AAAC,KAAnL,EAAoL,IAApL,EAAyL,KAAzL,EAA+LX,KAAK,CAACY,OAArM,CAAV;AACA,WAAQ,MAAC,KAAD,CAAO,GAAP,CAAW,GAAX,OAAR;AACH,GAJc;AAAA,CAAf","sourcesContent":["import useHandler from '../../src/handler.js'\r\nexport default (React,useState) => (props) => {\r\n    let [messages,setMessages] = useState();\r\n    useHandler('message',(m) => {setMessages((messages || []).concat([m])); if(m.content.beginsWith('o|init')){let c = m.channel.createMessageCollector(a => true,{}); c.on('collect',() => {})}},'on','off',props.discord);\r\n    return (<props.lib.Div></props.lib.Div>)\r\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport * as R from 'ramda';\nlet Inspector;\nexport default Inspector = R.pipe(props => _Object$assign({}, props, props.lib), props => {\n  if (props.Tabs && props.Div && props.List && props.TextArea && props.Window) {\n    var _props$obj$key;\n\n    let {\n      0: key,\n      1: setKey\n    } = useState([]);\n    let isReactComponent = props.obj instanceof Function;\n    return __jsx(props.Tabs.Tabs, null, __jsx(props.Tabs.Tab, {\n      title: 'Inspect'\n    }, __jsx(props.Div, null, __jsx(props.List, {\n      all: _Object$keys(props.obj),\n      selected: key,\n      onSelect: setKey\n    }), __jsx(props.Div, {\n      direction: 'ttb'\n    }, __jsx(props.TextArea, {\n      value: (_props$obj$key = props.obj[key]) === null || _props$obj$key === void 0 ? void 0 : _props$obj$key.toString()\n    }), __jsx(Inspector, {\n      obj: props.obj[key]\n    })))), props.obj.wantsToBeInspectedAsReact ? __jsx(props.Tabs.Tab, {\n      title: 'Use'\n    }, __jsx(props.Window, null, __jsx(props.obj, null))) : null);\n  }\n\n  ;\n  return null;\n});","map":{"version":3,"sources":["/home/graham/st/OLWebFull/src/Inspector.js"],"names":["React","useState","R","Inspector","pipe","props","lib","Tabs","Div","List","TextArea","Window","key","setKey","isReactComponent","obj","Function","toString","wantsToBeInspectedAsReact"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,KAAKC,CAAZ,MAAmB,OAAnB;AACA,IAAIC,SAAJ;AACA,eAAeA,SAAS,GAAGD,CAAC,CAACE,IAAF,CAAOC,KAAK,IAAI,eAAc,EAAd,EAAiBA,KAAjB,EAAuBA,KAAK,CAACC,GAA7B,CAAhB,EAAkDD,KAAK,IAAI;AAAC,MAAGA,KAAK,CAACE,IAAN,IAAcF,KAAK,CAACG,GAApB,IAA2BH,KAAK,CAACI,IAAjC,IAAyCJ,KAAK,CAACK,QAA/C,IAA2DL,KAAK,CAACM,MAApE,EAA2E;AAAA;;AAAC,QAAI;AAAA,SAACC,GAAD;AAAA,SAAKC;AAAL,QAAeZ,QAAQ,CAAC,EAAD,CAA3B;AAAgC,QAAIa,gBAAgB,GAAGT,KAAK,CAACU,GAAN,YAAqBC,QAA5C;AAAqD,WAAQ,MAAC,KAAD,CAAO,IAAP,CAAY,IAAZ,QAC5P,MAAC,KAAD,CAAO,IAAP,CAAY,GAAZ;AAAgB,MAAA,KAAK,EAAI;AAAzB,OACI,MAAC,KAAD,CAAO,GAAP,QACI,MAAC,KAAD,CAAO,IAAP;AAAY,MAAA,GAAG,EAAI,aAAYX,KAAK,CAACU,GAAlB,CAAnB;AAA2C,MAAA,QAAQ,EAAIH,GAAvD;AAA4D,MAAA,QAAQ,EAAGC;AAAvE,MADJ,EAEI,MAAC,KAAD,CAAO,GAAP;AAAW,MAAA,SAAS,EAAI;AAAxB,OACI,MAAC,KAAD,CAAO,QAAP;AAAgB,MAAA,KAAK,oBAAIR,KAAK,CAACU,GAAN,CAAUH,GAAV,CAAJ,mDAAI,eAAgBK,QAAhB;AAAzB,MADJ,EAEI,MAAC,SAAD;AAAW,MAAA,GAAG,EAAIZ,KAAK,CAACU,GAAN,CAAUH,GAAV;AAAlB,MAFJ,CAFJ,CADJ,CAD4P,EAU3PP,KAAK,CAACU,GAAN,CAAUG,yBAAV,GAAuC,MAAC,KAAD,CAAO,IAAP,CAAY,GAAZ;AAAgB,MAAA,KAAK,EAAI;AAAzB,OACpC,MAAC,KAAD,CAAO,MAAP,QACI,MAAC,KAAD,CAAO,GAAP,OADJ,CADoC,CAAvC,GAMoB,IAhBuO,CAAR;AAiBpO;;AAAA;AAAE,SAAO,IAAP;AAAY,CAjBP,CAA3B","sourcesContent":["import React, {useState} from 'react'\nimport * as R from 'ramda'\nlet Inspector;\nexport default Inspector = R.pipe(props => Object.assign({},props,props.lib),props => {if(props.Tabs && props.Div && props.List && props.TextArea && props.Window){let [key,setKey] = useState([]);let isReactComponent = props.obj instanceof Function;return (<props.Tabs.Tabs>\n    <props.Tabs.Tab title = {'Inspect'}>\n        <props.Div>\n            <props.List all = {Object.keys(props.obj)} selected = {key} onSelect= {setKey}></props.List>\n            <props.Div direction = {'ttb'}>\n                <props.TextArea value = {props.obj[key]?.toString()}></props.TextArea>\n                <Inspector obj = {props.obj[key]}></Inspector>\n            </props.Div>\n        </props.Div>\n    </props.Tabs.Tab>\n    {props.obj.wantsToBeInspectedAsReact ? (<props.Tabs.Tab title = {'Use'}>\n        <props.Window>\n            <props.obj></props.obj>\n\n        </props.Window>\n\n    </props.Tabs.Tab>) : null}\n</props.Tabs.Tabs>)}; return null})"]},"metadata":{},"sourceType":"module"}
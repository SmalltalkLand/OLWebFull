{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nvar _jsxFileName = \"D:\\\\Graham\\\\ObjectLand\\\\main\\\\OLWebFull\\\\pages\\\\desktop\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport root from 'react-shadow';\nimport Window from '../../src/Window.js';\nimport Iframe from '../../src/Iframe.js';\nimport MainWelcomePage from '../index.js';\nimport { chromeSwitch } from '../../../OLEx/dist/index.js';\nimport * as Polyglot from 'node-polyglot';\nexport default class extends React.Component {\n  constructor(props = {}) {\n    super(props);\n    this.state = {\n      objectTagSheet: {},\n      HotTable: null\n    };\n    this.onSnapMessage = this.onSnapMessage.bind(this);\n\n    try {\n      this.renderExWinPossibly = chromeSwitch(() => __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }), this.renderExWin.bind(this));\n    } catch (err) {\n      this.renderExWinPossibly = () => __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16\n        },\n        __self: this\n      });\n    }\n\n    ;\n    (self.fetch || (() => _Promise.reject()))('/pages/api/usr').then(r => r.text()).then(t => {});\n    if (self.navigator) import('@handsontable/react').then(m => this.setState({\n      HotTable: m.HotTable\n    }));\n  }\n\n  renderExWin() {\n    return __jsx(Window, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, __jsx(root.div, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }));\n  }\n\n  render() {\n    if (self.navigator) HotTable = this.state.HotTable;\n    return __jsx(root.div, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: 'External',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, __jsx(\"slot\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    })), __jsx(Window, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(MainWelcomePage, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    })), __jsx(Window, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, __jsx(\"mjs-host\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    })), __jsx(Window, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, self.navigator && __jsx(HotTable, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    })), this.renderExWinPossibly(), __jsx(Window, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(root.div, {\n      className: 'iframe',\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }, __jsx(Iframe, {\n      src: 'https://snap.berkeley.edu',\n      onMessage: this.onSnapMessage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }))));\n  }\n\n  onSnapMessage(m) {}\n\n}","map":{"version":3,"sources":["D:/Graham/ObjectLand/main/OLWebFull/pages/desktop/index.js"],"names":["React","root","Window","Iframe","MainWelcomePage","chromeSwitch","Polyglot","Component","constructor","props","state","objectTagSheet","HotTable","onSnapMessage","bind","renderExWinPossibly","renderExWin","err","self","fetch","reject","then","r","text","t","navigator","m","setState","render"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport root from 'react-shadow';\r\nimport Window from '../../src/Window.js'\r\nimport Iframe from '../../src/Iframe.js'\r\nimport MainWelcomePage from '../index.js';\r\nimport {chromeSwitch} from '../../../OLEx/dist/index.js'\r\nimport * as Polyglot from 'node-polyglot'\r\nexport default class extends React.Component{\r\n    constructor(props = {}){\r\nsuper(props);\r\nthis.state = {objectTagSheet: {},HotTable: null};\r\nthis.onSnapMessage = this.onSnapMessage.bind(this);\r\ntry{\r\nthis.renderExWinPossibly = chromeSwitch(() => (<span></span>),this.renderExWin.bind(this));\r\n}catch(err){\r\n    this.renderExWinPossibly = () => (<span></span>);\r\n\r\n};\r\n(self.fetch || (() => Promise.reject()))('/pages/api/usr').then(r => r.text()).then(t => {\r\n\r\n\r\n});\r\nif(self.navigator)import('@handsontable/react').then(m => this.setState({HotTable: m.HotTable}));\r\n    }\r\n    renderExWin(){\r\nreturn (<Window><root.div></root.div></Window>)\r\n\r\n    }\r\nrender(){\r\n    if(self.navigator)HotTable = this.state.HotTable;\r\n    return (<root.div>\r\n    <div className = {'External'}><slot></slot></div>\r\n    <Window><MainWelcomePage></MainWelcomePage></Window>\r\n    <Window><mjs-host></mjs-host></Window>\r\n    <Window>{self.navigator && (<HotTable></HotTable>)}</Window>\r\n    {this.renderExWinPossibly()}\r\n    <Window><root.div className = {'iframe'}><Iframe src = {'https://snap.berkeley.edu'} onMessage = {this.onSnapMessage}></Iframe></root.div></Window></root.div>)}\r\nonSnapMessage(m){}\r\n}"]},"metadata":{},"sourceType":"module"}
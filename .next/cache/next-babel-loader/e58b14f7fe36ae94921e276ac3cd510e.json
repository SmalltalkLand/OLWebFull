{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime-corejs2/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport composeRefs from '@seznam/compose-react-refs';\nimport { setCodeMode, getCodeMode } from './codi.js';\nimport ReactDOM from 'react-dom';\n\nvar IframeBase =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(IframeBase, _React$Component);\n\n  function IframeBase() {\n    _classCallCheck(this, IframeBase);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(IframeBase).apply(this, arguments));\n  }\n\n  _createClass(IframeBase, [{\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props = this.props,\n          theRef = _this$props.theRef,\n          ps = _objectWithoutProperties(_this$props, [\"theRef\"]);\n\n      return __jsx(\"iframe\", _extends({\n        ref: composeRefs(theRef, function (i) {\n          _this.listener && window.removeEventListener('message', _this.listener);\n          window.addEventListener('message', _this.listener = function (m) {\n            if (m.source === i.contentWindow) {\n              setCodeMode('user', function () {\n                return _this.props.onMessage(m);\n              });\n            }\n          });\n          if (_this.props.winReact) ReactDOM.render(_this.props.winReact, i.contentWindow);\n          composeRefs(_this.props.windowRef)(i.contentWindow);\n        })\n      }, ps));\n    }\n  }]);\n\n  return IframeBase;\n}(React.Component);\n\nvar Iframe;\nexport default Iframe = {\n  canRenderHTML: true,\n  html: React.forwardRef(function (props, ref) {\n    return __jsx(IframeBase, _extends({}, props, {\n      theRef: ref\n    }));\n  })\n};","map":{"version":3,"sources":["/home/graham/st/OLWebFull/src/Iframe.js"],"names":["React","composeRefs","setCodeMode","getCodeMode","ReactDOM","IframeBase","props","theRef","ps","i","listener","window","removeEventListener","addEventListener","m","source","contentWindow","onMessage","winReact","render","windowRef","Component","Iframe","canRenderHTML","html","forwardRef","ref"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,4BAAxB;AACA,SAAQC,WAAR,EAAqBC,WAArB,QAAuC,WAAvC;AACA,OAAOC,QAAP,MAAqB,WAArB;;IACMC,U;;;;;;;;;;;;;6BACE;AAAA;;AAAA,wBAAsB,KAAKC,KAA3B;AAAA,UAAMC,MAAN,eAAMA,MAAN;AAAA,UAAgBC,EAAhB;;AAAiC,aAAQ;AAAQ,QAAA,GAAG,EAAIP,WAAW,CAACM,MAAD,EAAQ,UAACE,CAAD,EAAO;AACtF,UAAA,KAAI,CAACC,QAAL,IAAiBC,MAAM,CAACC,mBAAP,CAA2B,SAA3B,EAAqC,KAAI,CAACF,QAA1C,CAAjB;AACAC,UAAAA,MAAM,CAACE,gBAAP,CAAwB,SAAxB,EAAkC,KAAI,CAACH,QAAL,GAAgB,UAAAI,CAAC,EAAI;AAAC,gBAAGA,CAAC,CAACC,MAAF,KAAaN,CAAC,CAACO,aAAlB,EAAgC;AAACd,cAAAA,WAAW,CAAC,MAAD,EAAS;AAAA,uBAAM,KAAI,CAACI,KAAL,CAAWW,SAAX,CAAqBH,CAArB,CAAN;AAAA,eAAT,CAAX;AAAmD;AAAC,WAA7I;AACA,cAAG,KAAI,CAACR,KAAL,CAAWY,QAAd,EAAuBd,QAAQ,CAACe,MAAT,CAAgB,KAAI,CAACb,KAAL,CAAWY,QAA3B,EAAoCT,CAAC,CAACO,aAAtC;AAC3Bf,UAAAA,WAAW,CAAC,KAAI,CAACK,KAAL,CAAWc,SAAZ,CAAX,CAAkCX,CAAC,CAACO,aAApC;AACC,SAL0E;AAA1B,SAKzCR,EALyC,EAAR;AAKlB;;;;EANER,KAAK,CAACqB,S;;AAS/B,IAAIC,MAAJ;AACA,eAAeA,MAAM,GAAG;AAACC,EAAAA,aAAa,EAAE,IAAhB;AAAqBC,EAAAA,IAAI,EAAExB,KAAK,CAACyB,UAAN,CAAiB,UAACnB,KAAD,EAAOoB,GAAP;AAAA,WAAgB,MAAC,UAAD,eAAgBpB,KAAhB;AAAuB,MAAA,MAAM,EAAIoB;AAAjC,OAAhB;AAAA,GAAjB;AAA3B,CAAxB","sourcesContent":["import React from 'react'\nimport composeRefs from '@seznam/compose-react-refs'\nimport {setCodeMode, getCodeMode} from './codi.js'\nimport ReactDOM from 'react-dom'\nclass IframeBase extends React.Component{\nrender(){let {theRef,...ps} = this.props;return (<iframe ref = {composeRefs(theRef,(i) => {\n    this.listener && window.removeEventListener('message',this.listener); \n    window.addEventListener('message',this.listener = m => {if(m.source === i.contentWindow){setCodeMode('user', () => this.props.onMessage(m))}});\n    if(this.props.winReact)ReactDOM.render(this.props.winReact,i.contentWindow);\ncomposeRefs(this.props.windowRef)(i.contentWindow)\n})} {...ps}></iframe>)}\n\n}\nlet Iframe;\nexport default Iframe = {canRenderHTML: true,html: React.forwardRef((props,ref) => (<IframeBase {...props} theRef = {ref}></IframeBase>))}"]},"metadata":{},"sourceType":"module"}
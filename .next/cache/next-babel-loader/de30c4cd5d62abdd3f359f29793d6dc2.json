{"ast":null,"code":"import _Object$assign from \"@babel/runtime-corejs2/core-js/object/assign\";\nimport _Map from \"@babel/runtime-corejs2/core-js/map\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport * as R from 'ramda';\nexport default (function (React) {\n  return function (mode) {\n    return function (desktop, lib, addWindow) {\n      return function (appCode) {\n        var w = new Worker(URL.createObjectURL(new Blob(appCode)));\n        var morohClassMap = new _Map();\n\n        var newMoroh = function newMoroh(desc) {\n          return R.pipe([R.props(['desc', 'children']), function (ndesc) {\n            return [ndesc[0] ? _Object$assign({}, desc, ndesc[0]) : desc, ndesk[1]];\n          }, function (desc) {\n            return __jsx(lib.Div, {\n              onClick: w.postMessage.bind(w, desc[0].clickMessage),\n              style: {\n                bg: desc[0].color,\n                \"backgroundColor\": desc[0].color\n              }\n            }, desk[1].concat(desc[0].children.map(function (c) {\n              return function (MC) {\n                return __jsx(MC, null);\n              }(newMoroh(c));\n            })));\n          }]);\n        };\n\n        w.addEventListener('message', R.pipe([function (m) {\n          return m.data;\n        }, R.cond([[function (d) {\n          return d.type === 'post_canvas';\n        }, R.pipe([function (d) {\n          return d.data;\n        }, function (d) {\n          return [d, document.createElement('canvas')];\n        }, function (d) {\n          return {\n            canvas: d[1],\n            d: d[0],\n            id: d[0].name,\n            render: R.pipe([function (rct) {\n              return [rct, d[1]];\n            }, function (a) {\n              return __jsx(lib.Div, {\n                ref: R.pipe([function (e) {\n                  return e.appendChild.bind(e);\n                }, R.partialRight(R.call, a[1])])\n              });\n            }])\n          };\n        }, R.tap(addWindow), R.props('canvas', 'd'), function (c) {\n          return [c[0].transferControlToOffscreen(), c[1]];\n        }, function (nc) {\n          return [{\n            type: 'return',\n            data: {\n              id: nc[1].id,\n              canvas: nc[0]\n            }\n          }, nc[0]];\n        }, R.apply.bind(R, w.postMessage.bind(w))])], [function (d) {\n          return d.type === 'create_moroh';\n        }, R.pipe([function (d) {\n          return d.data;\n        }, function (d) {\n          return [d[0], newMoroh(d[1])];\n        }, R.tap(R.apply.bind(R, morohClassMap.set.bind(morohClassMap)))])], [function (d) {\n          return d.type === 'moroh_in_window';\n        }, R.pipe([function (d) {\n          return d.data;\n        }, R.props('id', 'wid'), function (d) {\n          return [morohClassMap.get(d[0]), d[1]];\n        }, function (d) {\n          return [{\n            id: d[1],\n            render: function render(rct) {\n              return function (C) {\n                return __jsx(C, null);\n              }(d[0]);\n            }\n          }];\n        }, R.tap(addWindow)])]])]));\n      };\n    };\n  };\n});","map":null,"metadata":{},"sourceType":"module"}
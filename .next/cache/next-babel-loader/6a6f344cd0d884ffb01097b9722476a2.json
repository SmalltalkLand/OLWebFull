{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport Draggable from 'react-draggable';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { Manager, Reference, Popper } from 'react-popper';\nimport * as R from 'ramda';\nimport XSvg from './open-iconic/svg/x.svg';\nexport default class Window extends React.Component {\n  render() {\n    return __jsx(Draggable, {\n      handle: \"span._titlebar\"\n    }, __jsx(Container, null, __jsx(Row, null, __jsx(Col, null, __jsx(Manager, null, __jsx(Reference, null, ({\n      ref\n    }) => __jsx(\"span\", {\n      style: {\n        height: this.props.titleHeight || '12px'\n      },\n      className: '_titlebar'\n    }, this.props.noClose ? __jsx(React.Fragment, null) : __jsx(\"span\", {\n      onClick: this.props.onClose\n    }, __jsx(\"svg\", {\n      dangerouslySetInnerHTML: {\n        __html: XSvg\n      }\n    })), this.props.titlebar && this.props.titlebar(), __jsx(\"span\", {\n      ref: ref\n    }, '_______'))), __jsx(Popper, null, ({\n      ref,\n      style,\n      placement,\n      arrowProps\n    }) => __jsx(\"div\", {\n      ref: ref,\n      style: style,\n      \"data-placement\": placement\n    }, this.props.noPopper ? __jsx(React.Fragment, null) : __jsx(Window, {\n      noPopper: true,\n      noClose: true,\n      titlebar: R.pipe(this.props.titlebar || (() => {\n        return __jsx(\"span\", null);\n      }), t => __jsx(\"span\", null, t, \"Help\"))\n    }, \"Drags Window\"), __jsx(\"div\", {\n      ref: arrowProps.ref,\n      style: arrowProps.style\n    })))))), __jsx(Row, null, __jsx(Col, null, this.props.children))));\n  }\n\n}","map":{"version":3,"sources":["/home/graham/st/OLWebFull/src/Window.js"],"names":["React","Draggable","Container","Row","Col","Manager","Reference","Popper","R","XSvg","Window","Component","render","ref","height","props","titleHeight","noClose","onClose","__html","titlebar","style","placement","arrowProps","noPopper","pipe","t","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,SAAQC,SAAR,EAAmBC,GAAnB,EAAwBC,GAAxB,QAAkC,iBAAlC;AACA,SAASC,OAAT,EAAkBC,SAAlB,EAA6BC,MAA7B,QAA2C,cAA3C;AACA,OAAO,KAAKC,CAAZ,MAAmB,OAAnB;AACA,OAAOC,IAAP,MAAiB,yBAAjB;AACA,eAAe,MAAMC,MAAN,SAAqBV,KAAK,CAACW,SAA3B,CAAoC;AACnDC,EAAAA,MAAM,GAAE;AAAC,WAAQ,MAAC,SAAD;AAAW,MAAA,MAAM,EAAI;AAArB,OACb,MAAC,SAAD,QACI,MAAC,GAAD,QACI,MAAC,GAAD,QACA,MAAC,OAAD,QACI,MAAC,SAAD,QACK,CAAC;AAACC,MAAAA;AAAD,KAAD,KAA4B;AAAM,MAAA,KAAK,EAAI;AAACC,QAAAA,MAAM,EAAE,KAAKC,KAAL,CAAWC,WAAX,IAA0B;AAAnC,OAAf;AAA2D,MAAA,SAAS,EAAI;AAAxE,OAAsF,KAAKD,KAAL,CAAWE,OAAX,GAAsB,2BAAtB,GAAgC;AAAM,MAAA,OAAO,EAAI,KAAKF,KAAL,CAAWG;AAA5B,OAAqC;AAAK,MAAA,uBAAuB,EAAI;AAACC,QAAAA,MAAM,EAAEV;AAAT;AAAhC,MAArC,CAAtH,EAC5B,KAAKM,KAAL,CAAWK,QAAX,IAAuB,KAAKL,KAAL,CAAWK,QAAX,EADK,EAEjC;AAAM,MAAA,GAAG,EAAIP;AAAb,OAAmB,SAAnB,CAFiC,CADjC,CADJ,EAOI,MAAC,MAAD,QACf,CAAC;AAAEA,MAAAA,GAAF;AAAOQ,MAAAA,KAAP;AAAcC,MAAAA,SAAd;AAAyBC,MAAAA;AAAzB,KAAD,KAA4C;AAAK,MAAA,GAAG,EAAIV,GAAZ;AAAiB,MAAA,KAAK,EAAIQ,KAA1B;AAAiC,wBAAkBC;AAAnD,OAC5C,KAAKP,KAAL,CAAWS,QAAX,GAAuB,2BAAvB,GAAiC,MAAC,MAAD;AAAQ,MAAA,QAAQ,EAAE,IAAlB;AAAwB,MAAA,OAAO,EAAI,IAAnC;AAAyC,MAAA,QAAQ,EAAIhB,CAAC,CAACiB,IAAF,CAAO,KAAKV,KAAL,CAAWK,QAAX,KAAwB,MAAM;AAAC,eAAO,mBAAP;AAAqB,OAApD,CAAP,EAA6DM,CAAC,IAAK,oBAAOA,CAAP,SAAnE;AAArD,sBADW,EAKzC;AAAK,MAAA,GAAG,EAAEH,UAAU,CAACV,GAArB;AAA0B,MAAA,KAAK,EAAEU,UAAU,CAACF;AAA5C,MALyC,CAD7B,CAPJ,CADA,CADJ,CADJ,EAsBQ,MAAC,GAAD,QAAK,MAAC,GAAD,QAAM,KAAKN,KAAL,CAAWY,QAAjB,CAAL,CAtBR,CADa,CAAR;AAyBa;;AA1B6B","sourcesContent":["import React from 'react'\nimport Draggable from 'react-draggable';\nimport {Container, Row, Col} from 'react-bootstrap'\nimport { Manager, Reference, Popper } from 'react-popper';\nimport * as R from 'ramda'\nimport XSvg from './open-iconic/svg/x.svg'\nexport default class Window extends React.Component{\nrender(){return (<Draggable handle = {\"span._titlebar\"}>\n    <Container>\n        <Row>\n            <Col>\n            <Manager>\n                <Reference>\n                    {({ref}) => (                <span style = {{height: this.props.titleHeight || '12px'}} className = {'_titlebar'}>{this.props.noClose ? (<></>) : (<span onClick = {this.props.onClose}><svg dangerouslySetInnerHTML = {{__html: XSvg}}></svg></span>)}\n                    {this.props.titlebar && this.props.titlebar()}\n                <span ref = {ref}>{'_______'}</span>\n                </span>)}\n                </Reference>\n                <Popper>\n{({ ref, style, placement, arrowProps }) => (<div ref = {ref} style = {style} data-placement = {placement}>\n{this.props.noPopper ? (<></>) : (<Window noPopper={true} noClose = {true} titlebar = {R.pipe(this.props.titlebar || (() => {return <span></span>}),t => (<span>{t}Help</span>))}>\nDrags Window\n    \n</Window>)}\n    <div ref={arrowProps.ref} style={arrowProps.style} />\n</div>)}\n\n                </Popper>\n            </Manager>\n            </Col></Row>\n            <Row><Col>{this.props.children}</Col></Row>\n            </Container>\n        </Draggable>)}\n\n}"]},"metadata":{},"sourceType":"module"}